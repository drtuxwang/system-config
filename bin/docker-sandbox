#!/usr/bin/env bash
#
# Run Docker sandbox with current directory mounted
#

set  -u

IMAGE="drtuxwang/debian-ops:stable"
LOCALPORT="2222"

DOCKER_RUN_FLAGS="
    --rm \
    --interactive \
    --tty \
    --cpu-quota=1000000 \
    --cpu-shares=50000 \
    --memory=1000m \
    --memory-reservation=50m \
    --publish $LOCALPORT:22
"

NETWORK=none
SANDBOX="$(id -u):$(id -g)"
while [ $# -gt 0 ]
do
    case $1 in
    -image=*)
        IMAGE=${1#*=}
        ;;
    -net)
        if [ "$NETWORK" != "host" ]
        then
            NETWORK="bridge"
        fi
        ;;
    -root)
        SANDBOX="0:0"
        ;;
    -*)
        echo "usage: $0 [-image=<image>] [-net] [-root] [command]"
        echo
        echo "optional arguments:"
        echo "   -image=<image>        Docker image (Default \"drtuxwang/debian-xfce:stable\"."
        echo "   -net                  Enable network device access."
        echo "   -root                 Run as root user (Default real user and group)."
        exit 1
        ;;
    *)
        break
        ;;
    esac
    shift
done

# Container hostname
DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --hostname $(basename $IMAGE | sed -e "s/:/-/;s/\.//g")-sandbox"

# Share current working directory
DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --volume=$PWD:/vol/sandbox --workdir=/vol/sandbox"

# Network
DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS --network=$NETWORK"

# Sandbox user (workaround AD passwd/group bug)
if [ "$SANDBOX" != "0:0" ]
then
    export TMPDIR=${TMPDIR:-/tmp/$(id -un)}
    mkdir -p $TMPDIR/docker/home
    cp -rp $HOME/.bashrc $HOME/.profile $HOME/.tmux.conf $HOME/.vim* $TMPDIR/docker/home
    echo "$(id -un):x:$(id -u):$(id -g):$(id -un),,,:/home/$(id -un):/bin/bash" > $TMPDIR/docker/passwd
    echo "$(id -gn):x:$(id -g):" > $TMPDIR/docker/group
    DOCKER_RUN_FLAGS="$DOCKER_RUN_FLAGS
        --volume=$TMPDIR/docker/passwd:/etc/passwd:ro
        --volume=$TMPDIR/docker/group:/etc/group:ro
        --volume=$TMPDIR/docker/home:/home/$(id -un)
        --user=$SANDBOX
        --env HOME=/home/$(id -un)
        --env cdsrc=/vol/sandbox
        --env cdinst=/vol/sandbox
        --env cdtest=/vol/sandbox
    "
fi

docker run $DOCKER_RUN_FLAGS --env SSH_PUBKEY="$(cat ~/.ssh/id_rsa.pub 2> /dev/null)" $IMAGE "$@"
