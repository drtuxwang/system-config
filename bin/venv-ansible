#!/usr/bin/env bash
#
# ansible virtualenv (system automation tool)
#

virtualenv_setup() {
    VENV_PYTHON="python3"
    VENV_PACKAGE="ansible-core==2.18.10"
    VENV_DEPENDS="certifi"
    VENV_POSTINST="install_collections"
    VENV_PRERUN="activate_collections"

    case ${ANSIBLE_VERSION:-} in
    2.7)
        VENV_PYTHON="python2.7"
        VENV_PACKAGE="ansible==2.7.18"
        VENV_DEPENDS=
        VENV_POSTINST=
        VENV_PRERUN=
        ;;
    2.12)
        VENV_PYTHON="python3.11"
        VENV_PACKAGE="ansible-core==2.12.10"
        ;;
    esac
}

install_collections() {
    CLASS=$($VENV_PYTHON --version | sed -e "s/Python /python/;s/[.][^.]*$//")
    export DEFAULT_MODULE_PATH="$VIRTUAL_ENV/lib/$CLASS/site-packages"
    "$VIRTUAL_ENV/bin/ansible-galaxy" collection install --ignore-certs ansible.posix -p "$DEFAULT_MODULE_PATH"
    "$VIRTUAL_ENV/bin/ansible-galaxy" collection install --ignore-certs community.general -p "$DEFAULT_MODULE_PATH"
    find "$VIRTUAL_ENV/lib" -type f -name '*test*.py' | grep "/[^/]*test[^/]*/" | sed -e "s/\/[^\/]*$//" | uniq | xargs rm -rfv
}

activate_collections() {
    CLASS=$($VENV_PYTHON --version | sed -e "s/Python /python/;s/[.][^.]*$//")
    export DEFAULT_MODULE_PATH="$VIRTUAL_ENV/lib/$CLASS/site-packages"
}


source "${0%/*}/venv_mod.bash"
