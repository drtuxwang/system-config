#
# GIT repository can over-ride:
# .git/config:
# [user]
#   email = <address>
#

[alias]
	checkout-all = "!f() { git checkout \"$1\" ||: ; git submodule foreach \"git checkout '$1' ||:\"; }; f"
	find-base = "!f() { git merge-base $1 $2; }; f"
	find-commit = "!f() { git fetch --all; git branch -a --contains $1; }; f"
	find-commits = "!f() { git log --no-merges --oneline $1~..HEAD; }; f"
	find-merge = "!f() { git log --graph $1^..${2:-HEAD}; }; f"
	find-nomerge = "!f() { git branch -r --no-merged | grep -v /HEAD | sed -e "s@.*origin/@@"; }; f"
	grep-all = "!f() { git --no-pager grep -in \"$1\"; git submodule foreach \"git --no-pager grep -in '$1'||:\"; }; f"
	grep-commit = "!f() { git rev-list --all | xargs -n 1000 git --no-pager grep -in \"$1\"; }; f"
	grep-rev = "!f() { git rev-list --all | (while read rev; do git grep -e \"$1\" $rev; done); }; f"
	merge = merge --no-ff
	pull-all = "!f() { git pull ||:; git submodule foreach \"git pull ||:\"; }; f"
	pull-lfs = "!f() { git lfs pull $(echo \" $*\" | sed -e \"s/ / -I /g\"); }; f"
	status-all = "!f() { (git status; git submodule foreach git status) | grep -E -v \"up to date|nothing to commit|^$\"; }; f"
	xdiff = difftool --tool=meld --dir-diff
	xmerge = mergetool --tool=meld
[color]
	ui = auto
[core]
	editor = vim
[credential]
	helper = store  # Uses ".git-credentials"
[diff]
	ignoreSubmodules = all
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge --skip -- %f
	process = git-lfs filter-process --skip
	required = true
[lfs]
	locksverify = true
[log]
	decorate = full
[pull]
	rebase = false
[push]
	default = simple
[user]
	name = ???
	email = ???
	signingkey = ???
