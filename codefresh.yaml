version: '1.0'

stages:
- default
- build
- package
- push
- test

steps:
  main_clone:
    title: Cloning main repository
    stage: default
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    git: drtuxwang

  setup_config:
    title: Setup configurations
    stage: default
    image: codefresh/cli:latest
    entry_point: /bin/sh
    commands:
    - ls -ld ${{CF_VOLUME_PATH}}/* ${{CF_VOLUME_PATH}}/${{CF_REPO_NAME}}/*
    - env | grep ^CF_ | sort
    - cf_export RELEASE_VERSION=$(git describe --tags --match "v[0-9]*" --long)
    - cf_export ALPINE_BASE=$(grep "^BASE_IMAGE" docker/alpine-3.20/Makefile | sed -e "s/.* //")
    - cf_export PYTHON_BASE=$(grep "^BASE_IMAGE" docker/python-3.13/Makefile | sed -e "s/.* //")
    - codefresh get contexts

  preparations:
    title: Prepare for build
    stage: build
    type: parallel
    steps:
      create_alpine_deps:
        title: Build Alpine dependencies
        image: codefresh/cli:latest
        entry_point: /bin/sh
        commands:
        - cd docker/alpine-3.20/bash && ../../bin/create-root-tar.sh bash bin vim
      create_python_deps:
        title: Build Python dependencies
        image: codefresh/cli:latest
        entry_point: /bin/sh
        commands:
        - cd docker/python-3.13/pip && ../../bin/create-root-tar.sh bash bin python3 vim
        - cd docker/python-3.13/pip && ../../bin/python-packages.bash

  docker_base_builds:
    title: Package Docker base images
    stage: package
    type: parallel
    steps:
      build_alpine_base:
        title: Build Alpine base image
        type: build
        image_name: drtuxwang/alpine
        tag: 3.20
        working_directory: docker/alpine-3.20
        dockerfile: Dockerfile
        build_arguments:
        - BASE_IMAGE=${{ALPINE_BASE}}
      build_python_base:
        title: Build Python image
        type: build
        image_name: drtuxwang/python
        tag: 3.13
        working_directory: docker/python-3.13
        dockerfile: Dockerfile
        build_arguments:
        - BASE_IMAGE=${{PYTHON_BASE}}

  docker_base_pushes:
    title: Push Docker base images
    stage: package
    type: parallel
    steps:
      push_alpine:
        stage: push
        title: Push Alpine base image
        type: push
        registry: dockerhub
        candidate: ${{build_alpine}}
        tag: 3.20
      push_python:
        title: Push Python base image
        type: push
        registry: dockerhub
        candidate: ${{build_python}}
        tag: 3.13

  docker_builds:
    title: Package Docker images
    stage: package
    type: parallel
    steps:
      build_alpine_bash:
        title: Build Alpine bash image
        type: build
        image_name: drtuxwang/alpine-bash
        tag: 3.20
        working_directory: docker/alpine-3.20/bash
        dockerfile: Dockerfile
      build_python:
        title: Build Python dev image
        type: build
        image_name: drtuxwang/python-dev
        tag: 3.13
        working_directory: docker/python-3.10/dev
        dockerfile: Dockerfile
        build_arguments:
        - BASE_IMAGE=${{PYTHON_BASE}}

  docker_pushes:
    title: Push Docker images
    stage: push
    type: parallel
    steps:
      push_alpine:
        title: Push Alpine bash image
        type: push
        registry: dockerhub
        candidate: ${{build_alpine_bash}}
        tag: 3.20
      push_python:
        title: Push Python dev image
        type: push
        registry: dockerhub
        candidate: ${{build_python}}
        tag: 3.13

  python_tests:
    title: Run Python tests
    stage: test
    image: ${{build_python}}
    commands:
    - make install test
